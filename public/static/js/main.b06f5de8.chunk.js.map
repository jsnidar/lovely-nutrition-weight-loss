{"version":3,"sources":["NavBar.js","GoalChart.js","GoalCard.js","GoalsContainer.js","CheckInCard.js","CheckInsContainer.js","Home.js","ErrorAlert.js","SignInForm.js","SignUpForm.js","LogIn.js","CheckInForm.js","GoalForm.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","setCurrentUser","currentUser","Navbar","className","bg","expand","sticky","Container","Brand","href","name","Toggle","aria-controls","Collapse","id","Nav","Link","Button","variant","onClick","fetch","method","then","r","ok","ChartJS","register","registerables","GoalChart","day","month","year","deleteGoal","navigate","useNavigate","useState","setErrors","currentGoal","goals","sort","a","b","Date","goal_end_date","length","startDate","goal_start_date","endDate","goalCheckIns","check_ins","forEach","checkIn","checkInDate","date","valueOf","push","x","y","weight","currentWeight","map","options","animation","spanGaps","responsive","scales","title","display","text","adapters","locale","enGB","type","distribution","time","parser","unit","plugins","legend","position","goal_name","data","datasets","label","borderColor","backgroundColor","showLine","goal_weight","borderDash","Row","style","vh","datasetIdKey","res","json","e","GoalCard","goalInfo","checkIns","formattedDate","givenDate","slice","parseInt","toDateString","metGoal","lbsToLose","lastCheckin","Card","Body","Title","Subtitle","Text","Col","GoalsContainer","showGoals","setShowGoals","renderGoals","goal","CheckInCard","checkInInfo","deleteCheckIn","left_arm_measurement","left_thigh_measurement","waist","hips","chest","notes","CheckInsContainer","showCheckIns","setShowCheckins","renderCheckIns","Home","Image","src","ErrorAlert","renderErrors","errors","err","index","Alert","SignInForm","password","username","formData","setFormData","Form","Group","controlId","Label","Control","placeholder","value","onChange","target","preventDefault","headers","body","JSON","stringify","user","handleSignInSubmit","SignUpForm","first_name","last_name","height_feet","height_inches","email","email_confirmation","password_confirmation","height","handleSignUpSubmit","LogIn","showSignIn","setShowSignIn","fluid","CheckInForm","updateCheckIns","checkInId","useParams","useEffect","formattedCheckIn","key","measurementDropDownValues","i","renderMeasurements","handleCheckInSubmit","Select","parseFloat","aria-label","GoalForm","updateGoals","goalId","goal_met","handleGoalSubmit","App","updatedUserInfo","priorGoal","check_in","path","element","deletedCheckIn","filter","deletedGoal","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","document","getElementById"],"mappings":"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","file":"static/js/main.b06f5de8.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Navbar, Nav, Button } from 'react-bootstrap';\n\nconst NavBar = ({ setCurrentUser, currentUser }) => {\n\n  function handleLogoutClick() {\n    fetch(\"/logout\", { method: \"DELETE\" }).then((r) => {\n      if (r.ok) {\n        setCurrentUser(null);\n      }\n    });\n  }\n\n  return (\n      <Navbar className='navigation' bg='light' expand=\"lg\" sticky=\"top\">\n        <Container>\n          <Navbar.Brand href=\"/\">\n            {currentUser.name}\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav>\n              <Nav.Link href=\"/\">Home</Nav.Link>\n              <Button variant=\"outline-warning\" onClick={handleLogoutClick}>\n                Logout\n              </Button>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n  )\n}\n\nexport default NavBar;","import { useNavigate } from 'react-router-dom';\nimport { Button, Container, Row } from 'react-bootstrap';\nimport { useState } from 'react';\nimport {\n  Chart as ChartJS,\n  registerables,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport {enGB} from 'date-fns/locale';\n\nChartJS.register(...registerables);\n\nconst GoalChart = ({day, month, year, currentUser, deleteGoal}) => {\n\n  let navigate = useNavigate()\n  const [errors, setErrors] = useState(null)\n\n  const currentGoal = currentUser.goals.sort(function(a,b){\n    return new Date(\n      year(a.goal_end_date),\n      month(a.goal_end_date),\n      day(a.goal_end_date)\n    ) - new Date(\n      year(b.goal_end_date),\n      month(b.goal_end_date),\n      day(b.goal_end_date)\n    );\n  })[currentUser.goals.length -1]\n\n  const startDate = new Date(\n    year(currentGoal.goal_start_date),\n    month(currentGoal.goal_start_date),\n    day(currentGoal.goal_start_date)\n  )\n\n  const endDate = new Date(\n    year(currentGoal.goal_end_date),\n    month(currentGoal.goal_end_date),\n    day(currentGoal.goal_end_date)\n  )\n\n  let goalCheckIns = []\n  currentUser.check_ins.forEach(checkIn => {\n    const checkInDate = new Date(\n      year(checkIn.date),\n      month(checkIn.date),\n      day(checkIn.date)\n    )\n\n    if(\n      checkInDate.valueOf() >= startDate.valueOf() && \n      checkInDate.valueOf() <= endDate.valueOf()\n    ){\n      goalCheckIns.push({x: checkIn.date, y: checkIn.weight})\n    }\n  })\n  \n  goalCheckIns = goalCheckIns.sort(function(a,b){\n    return new Date(a.x.valueOf()) - new Date(b.x.valueOf());\n  }).map(checkIn => { \n    return {x: checkIn.x, y: checkIn.y}\n    }\n  )\n  \n  let currentWeight = goalCheckIns.length > 0 ? \n    goalCheckIns[0].y : \n    currentUser.check_ins.sort(function(a,b){\n      return new Date(\n        year(a.date),\n        month(a.date),\n        day(a.date)\n      ).valueOf() - new Date(\n        year(b.date),\n        month(b.date),\n        day(b.date)\n      ).valueOf();\n    })[currentUser.check_ins.length -1].weight\n\n    const handleDeleteGoal = () => {\n      fetch(`/goals/${currentGoal.id}`, {\n        method: \"DELETE\"\n      })\n      .then(res => {\n        if(res.ok){\n          res.json()\n          .then(() => deleteGoal(currentGoal));\n        }else{\n          res.json().then(e => setErrors(e))\n        }\n      })\n    }\n\n  const options = {\n    animation: false,\n    spanGaps: true,\n    responsive: true,\n    scales: {\n      y: {\n        title: {\n          display: true,\n          text: \"Weight in lbs\"\n        }\n      },\n      x: {\n        adapters: {\n          date: {\n              locale: enGB\n          }\n      },\n        type: \"time\",\n        distribution: \"linear\",\n        time: {\n          parser: \"yyyy-MM-dd\",\n          unit: \"month\"\n        },\n        title: {\n          display: true,\n          text: \"Date\"\n        }\n      }\n    },\n    plugins: {\n      legend: {position: 'top'},\n      title: {\n        display: true,\n        text: currentGoal.goal_name,\n      },\n    },\n  };\n\n  const data = {\n    datasets: [\n      {\n        label: 'Check-Ins',\n        data: goalCheckIns,\n        borderColor: 'rgb(53, 162, 235)',\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\n        showLine: true\n      },\n      {\n        label: 'Goal',\n        data: [{x: startDate, y: currentWeight}, {x: endDate, y: currentGoal.goal_weight}],\n        borderColor: '#FFCE0E',\n        backgroundColor: '#FFCE0E',\n        borderDash: [3]\n      }\n    ],\n  };\n\n  return(\n    // <Container style={{\n    //   position: \"relative\",\n    //   margin: \"auto\",\n    //   height: \"50vh\",\n    //   width: \"80vw\",\n    //   }}>\n    <Container className=\"border border-secondary\">\n      <Row>\n        <Line\n          options={options}\n          data={data}\n          style={{vh:50}}\n          datasetIdKey=\"id\"\n        />\n      </Row>\n      <Row className='d-flex justify-content-around'>\n          <Button \n            className=\"w-50 m-2\" \n            variant='warning' \n            onClick={() => navigate(`/goals/${currentGoal.id}/edit`)}\n          >Edit Current Goal</Button>\n          <Button \n            className=\"w-50 m-2\" \n            variant='warning' \n            onClick={() => handleDeleteGoal()}\n          >Delete Current Goal</Button>\n      </Row>\n    </Container>\n  )\n}\n\nexport default GoalChart; ","\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"\nimport { Card, Row, Col, Button } from \"react-bootstrap\"\n\nconst GoalCard = ({ goalInfo, deleteGoal, checkIns }) => {\n\n  const [errors, setErrors] = useState(null)\n  let navigate = useNavigate();\n\n  const year = (date) => date.slice(0,4)\n  const month = (date) => parseInt(date.slice(5,7)) - 1\n  const day = (date) => date.slice(8,10)\n\n  const formattedDate = (givenDate) => new Date(\n    year(givenDate),\n    month(givenDate),\n    day(givenDate)\n  ).toDateString();\n\n  const metGoal = checkIns.length > 0 ? \n    checkIns[checkIns.length -1].weight <= goalInfo.goal_weight : \n    false\n\n  const lbsToLose = checkIns[checkIns.length -1].weight - goalInfo.goal_weight\n  const startDate = goalInfo.goal_start_date\n  const endDate = goalInfo.goal_end_date\n  const lastCheckin = checkIns[checkIns.length -1]\n\n  const handleDeleteGoal = () => {\n    fetch(`/goals/${goalInfo.id}`, {\n      method: \"DELETE\"\n    })\n    .then(res => {\n      if(res.ok){\n        res.json()\n        .then(() => deleteGoal(goalInfo));\n      }else{\n        res.json().then(e => setErrors(e))\n      }\n    })\n  }\n\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>Name: {goalInfo.goal_name}</Card.Title>\n        <Row>\n          <Card.Subtitle className=\"mb-2 text-muted\">Date Range: </Card.Subtitle>\n          <Card.Text>\n            {formattedDate(startDate)} to {formattedDate(endDate)}\n          </Card.Text>\n          <br></br>\n        </Row>\n        <Row>\n          <Col>\n            <Card.Subtitle className=\"mb-2 text-muted\">Starting weight: </Card.Subtitle>\n            <Card.Text>\n              {\n                checkIns.length > 0 ? \n                checkIns[0].weight + \" lbs\" : \n                null\n              } \n            </Card.Text>\n          </Col>\n          <Col>\n            <Card.Subtitle className=\"mb-2 text-muted\">Goal weight: </Card.Subtitle>\n            <Card.Text>\n              {goalInfo.goal_weight} lbs.\n            </Card.Text>\n          </Col>\n          <Col>\n            <Card.Subtitle className=\"mb-2 text-muted\">Final Weight: </Card.Subtitle>\n            <Card.Text>\n              {checkIns.length > 0 ? lastCheckin.weight + \" lbs\" : null}\n            </Card.Text>\n          </Col>\n        </Row>\n        <Row>\n          {<Card.Text>{\n            checkIns.length > 0 ? \n              metGoal ? \n                \"Congratulations you met your goal!\" : \n                `Only ${lbsToLose} lbs. to go!` : \n            null\n          }\n          </Card.Text>}\n        </Row>\n        <Button \n          variant='warning' \n          onClick={() => handleDeleteGoal()}\n        >Delete</Button>\n        <Button \n          variant='warning' \n          onClick={() => navigate(`/goals/${goalInfo.id}/edit`)}\n        >Edit</Button>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default GoalCard;","import { Row, Container, Button } from 'react-bootstrap';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport GoalChart from \"./GoalChart\";\nimport GoalCard from \"./GoalCard\";\n\nconst GoalsContainer = ({ month, day, year, currentUser, deleteGoal, }) => {\n\n  const [showGoals, setShowGoals] = useState(false)\n  let navigate = useNavigate()\n\n\n  let renderGoals = currentUser.goals.sort(function(a,b){\n    return new Date(b.date) - new Date(a.date);\n  })\n  \n  renderGoals = renderGoals.map(goal => {\n    const startDate = new Date(\n      year(goal.goal_start_date),\n      month(goal.goal_start_date),\n      day(goal.goal_start_date)\n    )\n  \n    const endDate = new Date(\n      year(goal.goal_end_date),\n      month(goal.goal_end_date),\n      day(goal.goal_end_date)\n    )\n    \n    let goalCheckIns = []\n\n    currentUser.check_ins.forEach(checkIn => {\n      const checkInDate = new Date(\n        year(checkIn.date),\n        month(checkIn.date),\n        day(checkIn.date)\n      )\n\n      if(\n        checkInDate.valueOf() >= startDate.valueOf() && \n        checkInDate.valueOf() <= endDate.valueOf()\n      ){\n        goalCheckIns.push(checkIn)\n      }\n    })\n\n    goalCheckIns = goalCheckIns.sort(function(a,b){\n      return new Date(a.date.valueOf()) - new Date(b.date.valueOf());\n    })\n\n    return <GoalCard \n      key={goal.id} \n      goalInfo={goal} \n      deleteGoal={deleteGoal} \n      checkIns={goalCheckIns} \n    />\n  })\n\n  return (\n    <Container className=\"border-bottom border-secondary\">\n        <Row className='p-2'>\n          <h3>Goals</h3>\n          {currentUser.goals.length > 0 ? <h5>Current Goal</h5> : null}\n        </Row>\n        <Row>\n          {currentUser.goals.length > 0 ? \n            <GoalChart\n              day={day}\n              month={month}\n              year={year}\n              currentUser={currentUser} \n              deleteGoal={deleteGoal}\n            /> : null\n          }\n        </Row>\n        <Row className=\"pt-2 d-flex justify-content-around\">\n          <Button \n            className=\"w-50 m-2\" \n            variant=\"warning\" \n            onClick={() => navigate(\"/goals/new\")}\n          >Create a Goal</Button>\n        </Row>\n        <Row className=\"d-flex justify-content-around\">\n          {currentUser.goals.length > 0 ? \n            <Button \n              className=\"w-50 m-2\" \n              variant=\"warning\" \n              onClick={() => setShowGoals(!showGoals)}\n            >{showGoals ? \"Hide Goals\" : \"Show Goals\" }\n            </Button> : \n            null\n          }\n        </Row>\n        <Row className=\"p-2 mb-2\">\n          {showGoals ? renderGoals : null }\n        </Row>\n      </Container>\n  )\n}\n\nexport default GoalsContainer;\n","\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"\nimport { Card, Row, Col, Button } from \"react-bootstrap\"\n\nconst CheckInCard = ({ day, month, year, checkInInfo, deleteCheckIn }) => {\n\n  const [errors, setErrors] = useState(null)\n  let navigate = useNavigate();\n\n  const formattedDate = (givenDate) => new Date(\n    year(givenDate),\n    month(givenDate),\n    day(givenDate)\n  ).toDateString();\n\n  const handleDeleteCheckIn = () => {\n    fetch(`/check_ins/${checkInInfo.id}`, {\n      method: \"DELETE\"\n    })\n    .then(res => {\n      if(res.ok){\n        res.json()\n        .then(() => deleteCheckIn(checkInInfo));\n      }else{\n        res.json().then(e => setErrors(e))\n      }\n    })\n  }\n\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>Date: {formattedDate(checkInInfo.date)}</Card.Title>\n        <Row>\n          <Col>\n            <Card.Subtitle className=\"mb-2 text-muted\">Weight</Card.Subtitle>\n            <Card.Text>{checkInInfo.weight} lbs.</Card.Text>\n          </Col>\n          <Col>\n            <Card.Subtitle className=\"mb-2 text-muted\">Measurements</Card.Subtitle>\n            {checkInInfo.left_arm_measurement ? \n              <Card.Text>\n                Left Arm: {checkInInfo.left_arm_measurement} in.\n              </Card.Text> : null\n            }\n            {checkInInfo.left_thigh_measurement ? \n              <Card.Text>\n                Left Thigh: {checkInInfo.left_thigh_measurement} in.\n              </Card.Text> : null\n            }\n            {checkInInfo.waist ? \n              <Card.Text>\n                Waist: {checkInInfo.waist} in.\n              </Card.Text> : null\n            }\n            {checkInInfo.hips ? \n              <Card.Text>\n                Hips: {checkInInfo.hips} in.\n              </Card.Text> : null\n            }\n            {checkInInfo.chest ? \n              <Card.Text>\n                Chest: {checkInInfo.chest} in.\n              </Card.Text> : null\n            }\n            <Card.Text>Notes: {checkInInfo.notes}</Card.Text>\n          </Col>\n        </Row>\n        <Button \n          variant='warning' \n          onClick={() => handleDeleteCheckIn()}\n        >Delete</Button>\n        <Button \n          variant='warning' \n          onClick={() => navigate(`/check-ins/${checkInInfo.id}/edit`)}\n        >Edit</Button>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default CheckInCard;","import { useNavigate } from \"react-router-dom\";\nimport { Container, Row, Button } from \"react-bootstrap\";\nimport CheckInCard from \"./CheckInCard\";\nimport { useState } from 'react';\n\nconst CheckInsContainer = ({ day, month, year, currentUser, deleteCheckIn }) => {\n\n  const [showCheckIns, setShowCheckins] = useState(false)\n  let navigate = useNavigate()\n\n  const renderCheckIns = currentUser.check_ins.sort(function(a,b){\n    return new Date(b.date) - new Date(a.date);\n  }).map(checkIn => <CheckInCard \n    key={checkIn.id} \n    checkInInfo={checkIn} \n    deleteCheckIn={deleteCheckIn}\n    year={year}\n    month={month}\n    day={day} \n  />)\n\n  return (\n    <Container className='pt-2'>\n      <Row>\n        <h3>Check Ins</h3>\n      </Row>\n      <Row className=\"d-flex justify-content-around\">\n        {currentUser.check_ins.length > 0 ? \n          <Button \n            className=\"w-50 m-2\" \n            variant=\"warning\" \n            onClick={() => setShowCheckins(!showCheckIns)}\n          >\n            {showCheckIns ? \"Hide Check Ins\" : \"Show Check Ins\" }\n          </Button> : null\n        }\n      </Row>\n      <Row>\n        {showCheckIns ? renderCheckIns : null }\n      </Row>\n      <Row className=\"d-flex justify-content-around\">\n        <Button \n          className=\"w-50 m-2\" \n          variant=\"warning\" \n          onClick={() => navigate(\"/check-ins/new\")}\n        >\n          Create a Check In\n        </Button>\n      </Row>\n    </Container>\n  )\n}\n\nexport default CheckInsContainer;","import { Container, Row, Image } from 'react-bootstrap';\nimport GoalsContainer from \"./GoalsContainer\";\nimport CheckInsContainer from './CheckInsContainer';\n\nconst Home = ({ day, month, year, currentUser, deleteCheckIn, deleteGoal}) => {\n\n  return (\n    <Container className='m-2 p-2'>\n      <Row className='p-2'>\n        <Image src=\"/lovely_logo.png\" />\n        <h1>Weight Loss Tracker</h1>\n      </Row>\n      <GoalsContainer \n        year={year}\n        month={month}\n        day={day}\n        currentUser={currentUser} \n        deleteGoal={deleteGoal} \n      />\n      <CheckInsContainer \n        year={year}\n        month={month}\n        day={day}\n        currentUser={currentUser}\n        deleteCheckIn={deleteCheckIn}\n      />\n    </Container>\n  );\n}\n\nexport default Home;","import { Alert } from 'react-bootstrap';\n\nconst ErrorAlert = ({ errors }) => {\n  \n  const renderErrors = errors.map((err, index) => <li key={index}>{err}</li>)\n\n  return(\n    <Alert variant=\"danger\">\n      <ul>\n        {renderErrors}\n      </ul>\n    </Alert>\n  )\n}\n\nexport default ErrorAlert;","import React, { useState } from 'react';\nimport { Form, Container, Row, Col, Button } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport ErrorAlert from './ErrorAlert';\n\nconst SignInForm = ({ setCurrentUser }) => {\n\n  let navigate = useNavigate()\n  const [errors, setErrors] = useState(null)\n  const [formData, setFormData ] = useState({\n    password: '',\n    username: ''\n  })\n\n  const handleSignInSubmit = (e) => {\n    e.preventDefault()\n    setErrors(null)\n    fetch('/login', {\n      method: \"POST\",\n      headers: {'Content-Type':'application/json'},\n      body:JSON.stringify(formData)\n    })\n    .then(res => {\n      if(res.ok){\n        res.json()\n        .then(user => setCurrentUser(user))\n        .then(navigate('/'));\n      }else{\n        res.json().then(e => setErrors(e))\n      }\n    })\n  }\n\n  return (\n    <Container>\n      <br></br>\n      <Form>\n        <Row>\n          <h1>Sign In</h1>\n          { errors ? <ErrorAlert errors={errors.errors} /> : null }\n        </Row>\n        <Row>\n          <Col>\n            <Form.Group className=\"mb-3\" controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control \n                type=\"text\" \n                placeholder=\"\"\n                value={formData.username}\n                onChange={e => setFormData({...formData, username: e.target.value})}\n              />\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group className=\"mb-3\" controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control \n              type=\"password\" \n              placeholder=\"Create a password\" \n              value={formData.password}\n              onChange={e => setFormData({...formData, password: e.target.value})}\n            />\n          </Form.Group>\n          </Col>\n        </Row>\n        <Button \n          variant=\"warning\" \n          type=\"submit\"\n          onClick={e => handleSignInSubmit(e)}\n        >\n          Submit\n        </Button>\n      </Form> \n    </Container>\n  );\n}\n\nexport default SignInForm;","import React, { useState } from 'react';\nimport { Button, Form, Container, Row, Col } from 'react-bootstrap';\nimport ErrorAlert from './ErrorAlert';\nimport { useNavigate } from 'react-router-dom';\n\nconst SignUpForm = ({ setCurrentUser }) => {\n\n  const [errors, setErrors] = useState(null)\n  const [formData, setFormData ] = useState({\n    first_name: '', \n    last_name: '',\n    height_feet: 0,\n    height_inches: 0,\n    email: '',\n    email_confirmation: '',\n    password: '',\n    password_confirmation: '',\n    username: ''\n  })\n  let navigate = useNavigate()\n\n  const handleSignUpSubmit = (e) => {\n    e.preventDefault()\n    setErrors(null)\n    const user = {\n      name: `${formData.first_name} ${formData.last_name}`,\n      height: parseInt(formData.height_feet * 12) + parseInt(formData.height_inches),\n      email: formData.email,\n      email_confirmation: formData.email_confirmation,\n      password: formData.password,\n      password_confirmation: formData.password_confirmation,\n      username: formData.username\n    }\n    fetch('/signup', {\n      method: \"POST\",\n      headers: {'Content-Type':'application/json'},\n      body:JSON.stringify(user)\n    })\n    .then(res => {\n      if(res.ok){\n        res.json()\n        .then(user => setCurrentUser(user))\n        .then(navigate('/'))\n      }else{\n        res.json().then(e => setErrors(e))\n      }\n    })\n  }\n\n  return (\n    <div>\n      {/* <NavBar /> */}\n      <Container>\n        <br></br>\n        <Form>\n          <Row>\n            <h1>Sign Up</h1>\n            { errors ? <ErrorAlert errors={errors.errors} /> : null }\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group className=\"mb-3\" controlId=\"firstName\">\n                <Form.Label>First Name</Form.Label>\n                <Form.Control \n                  type=\"text\" \n                  placeholder=\"\"\n                  value={formData.first_name}\n                  onChange={e => setFormData({...formData, first_name: e.target.value})}\n                />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group className=\"mb-3\" controlId=\"lastName\">\n                <Form.Label>Last Name</Form.Label>\n                <Form.Control \n                  type=\"text\" \n                  placeholder=\"\"\n                  value={formData.last_name}\n                  onChange={e => setFormData({...formData, last_name: e.target.value})}\n                />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group className=\"mb-3\" controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control \n                  type=\"text\" \n                  placeholder=\"\"\n                  value={formData.username}\n                  onChange={e => setFormData({...formData, username: e.target.value})}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n            <Form.Label>Height</Form.Label>\n          <Row>\n            <Col>\n              <Form.Group className=\"mb-3\" controlId=\"heightFeet\">\n                <Form.Label>Feet</Form.Label>\n                <Form.Control \n                  type=\"number\" \n                  placeholder=\"Enter feet\"\n                  value={formData.height_feet}\n                  onChange={e => setFormData({...formData, height_feet: e.target.value})}\n                />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group className=\"mb-3\" controlId=\"heightInches\">\n                <Form.Label>Inches</Form.Label>\n                <Form.Control \n                  type=\"number\" \n                  placeholder=\"Enter inches\"\n                  value={formData.height_inches}\n                  onChange={e => setFormData({...formData, height_inches: e.target.value})}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n                <Form.Group className=\"mb-3\" controlId=\"email\">\n                  <Form.Label>Enter Email Address</Form.Label>\n                  <Form.Control \n                    type=\"email\" \n                    placeholder=\"name@example.com\" \n                    value={formData.email}\n                    onChange={e => setFormData({...formData, email: e.target.value})}\n                  />\n                </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group className=\"mb-3\" controlId=\"emailConfirmation\">\n                <Form.Label>Confirm Email Address</Form.Label>\n                <Form.Control \n                  type=\"email\" \n                  placeholder=\"name@example.com\" \n                  value={formData.email_confirmation}\n                  onChange={e => setFormData({...formData, email_confirmation: e.target.value})}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group className=\"mb-3\" controlId=\"password\">\n                <Form.Label>Create Password</Form.Label>\n                <Form.Control \n                  type=\"password\" \n                  placeholder=\"Create a password\" \n                  value={formData.password}\n                  onChange={e => setFormData({...formData, password: e.target.value})}\n                />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group className=\"mb-3\" controlId=\"passwordConfirmation\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control \n                  type=\"password\" \n                  placeholder=\"Confirm your password\" \n                  value={formData.password_confirmation}\n                  onChange={e => setFormData({...formData, password_confirmation: e.target.value})}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Button \n            variant=\"warning\" \n            type=\"submit\"\n            onClick={e => handleSignUpSubmit(e)}\n          >\n            Submit\n          </Button>\n        </Form> \n      </Container>\n    </div>\n  );\n}\n\nexport default SignUpForm;","\nimport { Container, Button, Image } from 'react-bootstrap';\nimport { useState } from 'react';\nimport SignInForm from './SignInForm';\nimport SignUpForm from './SignUpForm';\n\nconst LogIn = ({ setCurrentUser }) => {\n\n  const [showSignIn, setShowSignIn] = useState(true)\n\n  return (\n    <>\n      <Container>\n        <Image src=\"JacquelynKPhotography_LovelyNutritionLogo_BLACK.png\" fluid />\n\n        { showSignIn ? (<>\n          <SignInForm setCurrentUser={setCurrentUser} />\n          <br></br>\n          <p>\n            Don't have an account? <Button \n              variant='link' \n              onClick={() => setShowSignIn(false)}\n            >   \n              Sign Up Now\n            </Button>\n          </p>\n        </>) : (\n          <>\n            <SignUpForm setCurrentUser={setCurrentUser} />\n            <br></br>\n            <p>\n              Already have an account? <Button \n                variant='link' \n                onClick={() => setShowSignIn(true)}\n              >   \n                Sign In Now\n              </Button>\n            </p>\n          </>\n        )}\n      </Container>\n    </>\n  )\n}\n\nexport default LogIn;","\nimport { Form, Container, Row, Col, Button } from 'react-bootstrap';\nimport { useEffect, useState } from 'react';\nimport ErrorAlert from './ErrorAlert';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nconst CheckInForm = ({updateCheckIns}) => {\n\n  let { checkInId } = useParams()\n  let navigate = useNavigate()\n\n  const [errors, setErrors] = useState(null)\n  const [formData, setFormData] = useState({\n    date: \"\",\n    weight: \"\",\n    left_arm_measurement: \"\",\n    left_thigh_measurement: \"\",\n    waist: \"\",\n    chest: \"\",\n    hips: \"\",\n    notes: \"\",\n    id: null\n  })\n\n  useEffect(() => {\n    if(checkInId) {\n      fetch(`/check_ins/${checkInId}`)\n      .then(r => r.json())\n      .then(checkIn => {\n        const formattedCheckIn = {\n          date: \"\",\n          weight: \"\",\n          left_arm_measurement: \"\",\n          left_thigh_measurement: \"\",\n          waist: \"\",\n          chest: \"\",\n          hips: \"\",\n          notes: \"\",\n          id: null\n        }\n        for(const key in checkIn) {\n          if(checkIn[key] !== null) {\n            formattedCheckIn[key] = checkIn[key]\n          }\n        }\n        setFormData(formattedCheckIn)\n      })\n    }\n  }, [checkInId])\n\n  const measurementDropDownValues = []\n  let i = 0\n  while( i < 85 ) {\n    measurementDropDownValues.push(i)\n    i = i + 0.25\n  }\n\n  const renderMeasurements = measurementDropDownValues.map(value => <option key={value} value={value}>{value}</option>)\n  \n  const editCheckIn = () => {\n    fetch(`/check_ins/${checkInId}`, {\n      method: \"PATCH\",\n      headers: {'Content-Type':'application/json'},\n      body:JSON.stringify(formData)\n    })\n    .then(res => {\n      if(res.ok){\n        res.json()\n        .then(checkIn => updateCheckIns(checkIn, checkInId))\n        .then(navigate('/'));\n      }else{\n        res.json().then(e => setErrors(e))\n      }\n    })\n  }\n\n  const createCheckIn = () => {\n    fetch('/check_ins', {\n      method: \"POST\",\n      headers: {'Content-Type':'application/json'},\n      body:JSON.stringify(formData)\n    })\n    .then(res => {\n      if(res.ok){\n        res.json()\n        .then(checkIn => updateCheckIns(checkIn))\n        .then(navigate('/'));\n      }else{\n        res.json().then(e => setErrors(e))\n      }\n    })\n  }\n\n  const handleCheckInSubmit = (e) => {\n    e.preventDefault()\n    setErrors(null)\n    checkInId ? editCheckIn() : createCheckIn()\n  }\n\n  return (\n    <Container>\n      <br></br>\n      <Form>\n        <Row>\n          { checkInId ? <h1>Edit Check In</h1> : <h1>Create a New Check In</h1> }\n          { errors ? <ErrorAlert errors={errors.errors} /> : null }\n        </Row>\n        <Row>\n          <Form.Group className=\"mb-3\" controlId=\"date\">\n            <Form.Label>Date</Form.Label>\n            <Form.Control \n              type=\"date\" \n              placeholder=\"Enter measurement in inches\" \n              value={formData.date}\n              onChange={e => setFormData({...formData, date: e.target.value})}\n            />\n          </Form.Group>\n        </Row>\n        <Row>\n          <Col>\n            <Form.Group className=\"mb-3\" controlId=\"weight\">\n              <Form.Label>Weight (lbs)</Form.Label>\n              <Form.Control \n                type=\"number\" \n                placeholder=\"Enter weight (lbs)\"\n                value={formData.weight}\n                onChange={e => setFormData(\n                  {...formData, weight: parseInt(e.target.value)}\n                )}\n              />\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group className=\"mb-3\" controlId=\"left_arm_measurement\">\n              <Form.Label>Left Arm (in) </Form.Label>\n              <Form.Select \n                value={formData.left_arm_measurement}\n                onChange={e => setFormData(\n                  {...formData, left_arm_measurement: parseFloat(e.target.value)}\n                )}\n                aria-label=\"Select a measurement\"\n              >\n                <option>Select a measurement</option>\n                {renderMeasurements}\n              </Form.Select>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group className=\"mb-3\" controlId=\"left_thigh_measurement\">\n              <Form.Label>Left Thigh (in)</Form.Label>\n              <Form.Select \n                value={formData.left_thigh_measurement}\n                onChange={e => setFormData(\n                  {...formData, left_thigh_measurement: parseFloat(e.target.value)}\n                )}\n                aria-label=\"Select a measurement\"\n              >\n                <option>Select a measurement</option>\n                {renderMeasurements}\n              </Form.Select>\n            </Form.Group>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Form.Group className=\"mb-3\" controlId=\"waist\">\n              <Form.Label>Waist (in)</Form.Label>\n              <Form.Select \n                value={formData.waist}\n                onChange={e => setFormData(\n                  {...formData, waist: parseFloat(e.target.value)}\n                )}\n                aria-label=\"Select a measurement\"\n              >\n                <option>Select a measurement</option>\n                {renderMeasurements}\n              </Form.Select>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group className=\"mb-3\" controlId=\"hips\">\n              <Form.Label>Hips (in)</Form.Label>\n              <Form.Select \n                value={formData.hips}\n                onChange={e => setFormData(\n                  {...formData, hips: parseFloat(e.target.value)}\n                )}\n                aria-label=\"Select a measurement\"\n              >\n                <option>Select a measurement</option>\n                {renderMeasurements}\n              </Form.Select>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group className=\"mb-3\" controlId=\"chest\">\n              <Form.Label>Chest (in)</Form.Label>\n              <Form.Select \n                value={formData.chest}\n                onChange={e => setFormData(\n                  {...formData, chest: parseFloat(e.target.value)}\n                )}\n                aria-label=\"Select a measurement\"\n              >\n                <option>Select a measurement</option>\n                {renderMeasurements}\n              </Form.Select>\n            </Form.Group>\n          </Col>\n        </Row>\n        <Row>\n          <Form.Group className=\"mb-3\" controlId=\"notes\">\n            <Form.Label>Notes</Form.Label>\n            <Form.Control \n              type=\"text\" \n              placeholder=\"Enter notes here\" \n              value={formData.notes}\n              onChange={e => setFormData(\n                {...formData, notes: e.target.value}\n              )}\n            />\n          </Form.Group>\n        </Row>\n        <Row className=\"d-flex justify-content-around\">\n          <Button \n            className=\"w-50 m-2\"\n            variant=\"warning\" \n            type=\"submit\"\n            onClick={e => handleCheckInSubmit(e)}\n          >Submit</Button>\n          <Button \n            className=\"w-50 m-2\"\n            variant=\"warning\" \n            onClick={e => navigate('/')}\n          >Cancel</Button>\n        </Row>\n      </Form> \n    </Container>\n  )\n}\n\nexport default CheckInForm","import { Form, Container, Row, Col, Button, Image } from 'react-bootstrap';\nimport { useEffect, useState } from 'react';\nimport ErrorAlert from './ErrorAlert';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nconst GoalForm = ({currentUser, updateGoals }) => {\n\n  let { goalId } = useParams()\n  let navigate = useNavigate()\n\n  const [errors, setErrors] = useState(null)\n\n  const [formData, setFormData] = useState({\n    goal_name: \"\",\n    goal_start_date: \"\",\n    goal_weight: \"\",\n    goal_end_date: \"\",\n    goal_met: \"\",\n    id: null\n  })\n\n  useEffect(() => {\n    if(goalId) {\n      fetch(`/goals/${goalId}`)\n      .then(r => r.json())\n      .then(goal => setFormData(goal))\n    }\n  }, [goalId])\n  \n  const editGoal = () => {\n    fetch(`/goals/${goalId}`, {\n      method: \"PATCH\",\n      headers: {'Content-Type':'application/json'},\n      body:JSON.stringify(formData)\n    })\n    .then(res => {\n      if(res.ok){\n        res.json()\n        .then(goal => updateGoals(goal, goalId))\n      }else{\n        res.json().then(e => setErrors(e))\n      }\n    })\n  }\n\n  const createGoal = () => {\n    fetch('/goals', {\n      method: \"POST\",\n      headers: {'Content-Type':'application/json'},\n      body:JSON.stringify(formData)\n    })\n    .then(res => {\n      if(res.ok){\n        res.json()\n        .then(goal => updateGoals(goal))\n        .then(navigate('/'));\n      }else{\n        res.json().then(e => setErrors(e))\n      }\n    })\n  }\n\n  const handleGoalSubmit = (e) => {\n    e.preventDefault()\n    setErrors(null)\n    goalId ? editGoal() : createGoal()\n  }\n\n  const currentWeight = currentUser.check_ins.sort(function(a,b){\n    return new Date(a.date) - new Date(b.date);\n  })[currentUser.check_ins.length -1].weight\n\n  return (\n    <Container>\n      <Image src=\"/lovely_logo.png\" />\n      <Form>\n        <Row>\n          { goalId ? <h1>Edit Goal</h1> : <h1>Create a Goal</h1> }\n          { errors ? <ErrorAlert errors={errors.errors} /> : null }\n        </Row>\n        <Row>\n          <Form.Group className=\"mb-3\" controlId=\"goalName\">\n            <Form.Label>Goal Name</Form.Label>\n            <Form.Control\n              type=\"text\" \n              placeholder=\"Enter a name for your goal here\" \n              value={formData.goal_name}\n              onChange={e => setFormData({...formData, goal_name: e.target.value})}\n            ></Form.Control>\n            <Form.Text className=\"text-muted\">\n              Examples: Fall 2022, my last 10 pounds!, my goal weight...\n            </Form.Text>\n          </Form.Group>\n        </Row>\n        <Row>\n          <Col>\n            <Form.Group className=\"mb-3\" controlId=\"startDate\">\n              <Form.Label>Start Date</Form.Label>\n              <Form.Control \n                type=\"date\" \n                placeholder=\"Select a start date\" \n                value={formData.goal_start_date}\n                onChange={e => setFormData({...formData, goal_start_date: e.target.value})}\n              />\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group className=\"mb-3\" controlId=\"endDate\">\n              <Form.Label>End Date</Form.Label>\n              <Form.Control \n                type=\"date\" \n                placeholder=\"Select an end date\" \n                value={formData.goal_end_date}\n                onChange={e => setFormData({...formData, goal_end_date: e.target.value})}\n              />\n            </Form.Group>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            Current Weight: {currentWeight}\n            <br></br>\n            <br></br>\n            Current BMI: {parseInt(currentWeight/(currentUser.height * currentUser.height) * 703)}\n            <br></br>\n            <br></br>\n            <Form.Group className=\"mb-3\" controlId=\"weight\">\n              <Form.Label>Goal Weight (lbs)</Form.Label>\n              <Form.Control \n                type=\"number\" \n                placeholder=\"Enter weight (lbs)\"\n                value={formData.goal_weight}\n                onChange={e => setFormData({...formData, goal_weight: parseInt(e.target.value)})}\n              />\n            </Form.Group>\n            Goal BMI: {typeof(formData.goal_weight) === 'number' ? parseInt(formData.goal_weight/(currentUser.height * currentUser.height) * 703) : \"\"}\n            <br></br>\n            <br></br>\n          </Col>\n        </Row>\n        <Row className=\"d-flex justify-content-around\">\n          <Button \n            className=\"w-50 m-2\"\n            variant=\"warning\" \n            type=\"submit\"\n            onClick={e => handleGoalSubmit(e)}\n          >Submit</Button>\n          <Button \n            className=\"w-50 m-2\"\n            variant=\"warning\" \n            onClick={e => navigate('/')}\n          >Cancel</Button>\n        </Row>\n      </Form> \n    </Container>\n  )\n}\n\nexport default GoalForm;","import './App.css';\nimport NavBar from './NavBar';\nimport Home from './Home';\nimport LogIn from './LogIn';\nimport CheckInForm from './CheckInForm';\nimport GoalForm from './GoalForm';\nimport { useState, useEffect } from 'react';\nimport { Route, Routes, useNavigate } from \"react-router-dom\"\n\nfunction App() {\n\n  const [currentUser, setCurrentUser] = useState(null)\n  let navigate = useNavigate()\n\n  useEffect(() => {\n    fetch(\"/me\").then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setCurrentUser(user));\n      }\n    });\n  }, []);\n\n  if (!currentUser) return <LogIn setCurrentUser={setCurrentUser} />;\n\n  const updateGoals = (goal, goalId) => {\n    const updatedUserInfo = {...currentUser}\n    goalId ? updatedUserInfo.goals = updatedUserInfo.goals.map(priorGoal => {\n      if (parseInt(priorGoal.id) === parseInt(goalId, 10)) {\n          return goal \n      }else{\n          return priorGoal\n      }}) : updatedUserInfo.goals.push(goal)\n    setCurrentUser(updatedUserInfo)\n    navigate('/')\n  }\n\n  const deleteGoal = (deletedGoal) => {\n    const updatedUserInfo = {...currentUser}\n    updatedUserInfo.goals = currentUser.goals.filter(goal => goal.id !== deletedGoal.id)\n    setCurrentUser(updatedUserInfo)\n  }\n\n  const updateCheckIns = (checkIn, checkInId) => {\n    const updatedUserInfo = {...currentUser}\n    checkInId ? updatedUserInfo.check_ins = updatedUserInfo.check_ins.map(check_in => {\n      if (check_in.id === parseInt(checkInId)) {\n          return checkIn \n      }else{\n          return check_in\n      }}) : updatedUserInfo.check_ins.push(checkIn)\n    setCurrentUser(updatedUserInfo)\n    navigate('/')\n  }\n    \n  const deleteCheckIn = (deletedCheckIn) => {\n    const updatedUserInfo = {...currentUser}\n    updatedUserInfo.check_ins = currentUser.check_ins.filter(checkIn => checkIn.id !== deletedCheckIn.id)\n    setCurrentUser(updatedUserInfo)\n  }\n\n  const year = (date) => date.slice(0,4)\n  const month = (date) => parseInt(date.slice(5,7)) - 1\n  const day = (date) => date.slice(8,10)\n\n  return (\n    <div>\n      <NavBar \n        currentUser={currentUser} \n        setCurrentUser={setCurrentUser} \n      />\n      <Routes>\n        <Route \n          path='/' \n          element={\n            <Home \n              deleteCheckIn={deleteCheckIn}\n              deleteGoal={deleteGoal}\n              currentUser={currentUser}\n              year={year}\n              month={month}\n              day={day} \n            />\n          } \n        />\n          <Route\n            path='/check-ins/new'\n            element={\n              <CheckInForm updateCheckIns={updateCheckIns} />\n            } \n          />\n          <Route\n            path='/check-ins/:checkInId/edit'\n            element={\n              <CheckInForm updateCheckIns={updateCheckIns} />\n            } \n          />\n          <Route\n            path='/goals/:goalId/edit'\n            element={\n              <GoalForm \n                currentUser={currentUser} \n                updateGoals={updateGoals} \n              />\n            }\n          />\n          <Route\n            path='/goals/new'\n            element={\n              <GoalForm \n                currentUser={currentUser} \n                updateGoals={updateGoals}\n              />\n            } \n          />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { render } from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nrender(\n  <BrowserRouter>\n      <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}